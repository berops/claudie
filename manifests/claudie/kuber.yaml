apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuber
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: claudie
      app.kubernetes.io/name: kuber
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: claudie
        app.kubernetes.io/name: kuber
    spec:
      terminationGracePeriodSeconds: 1320
      securityContext:
        # needed by kuber to be able to ping nodes to determine
        # which of them are reachable or not.
        sysctls:
          - name: net.ipv4.ping_group_range
            value: "1 3000"
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - name: kuber
          imagePullPolicy: Always
          image: ghcr.io/berops/claudie/kuber
          volumeMounts:
            - mountPath: /bin/services/kuber/server/clusters
              name: data
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - all
              add:
                # needed to access raw sockets for ping.
                - NET_RAW
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            limits:
              memory: 700Mi
          env:
            - name: KUBER_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: KUBER_PORT
            - name: OPERATOR_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: OPERATOR_PORT
            - name: OPERATOR_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: OPERATOR_HOSTNAME
            - name: GOLANG_LOG
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: GOLANG_LOG
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 50057
            - name: "metrics"
              containerPort: 9090
          readinessProbe:
            grpc:
              port: 50057
              service: kuber-readiness
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            grpc:
              port: 50057
              service: kuber-liveness
            initialDelaySeconds: 5
            periodSeconds: 30
      serviceAccountName: kuber
---
kind: Service
apiVersion: v1
metadata:
  name: kuber
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
spec:
  selector:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
  ports:
    - protocol: TCP
      port: 50057
      targetPort: 50057

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuber
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuber
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
rules:
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "services"]
    verbs: ["create", "patch", "update", "get", "list", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["create", "patch", "update", "get", "list", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kuber
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: kuber
roleRef:
  kind: Role
  name: kuber
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kuber
