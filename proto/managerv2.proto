syntax = "proto3";
package claudie;

import "spec/manifestv2.proto";

option go_package = "proto/pb";


message UpsertManifestRequestV2 {string name = 1; spec.KubernetesContextV2 k8sCtx = 2; spec.ManifestV2 manifest = 3;}
message UpsertManifestResponseV2 {string name = 1; uint64 version = 2;}

message MarkForDeletionRequestV2 {string name = 1; uint64 version = 2;}
message MarkForDeletionResponseV2 {string name = 1; uint64 version = 2;}


message ListConfigRequestV2 {}
message ListConfigResponseV2 {repeated spec.ConfigV2 configs = 1;}

message GetConfigRequestV2 {string name = 1;}
message GetConfigResponseV2 {spec.ConfigV2 config = 1;}

service ManagerV2Service {
    // UpsertManifest will process the request by either creating a new configuration for the
    // given input manifest or updating an existing one.
    rpc UpsertManifest(UpsertManifestRequestV2) returns (UpsertManifestResponseV2);

    // MarkForDeletion will mark the requested configuration to be deleted. Once the
    // manager determines the configuration can be deleted it will be deleted.
    rpc MarkForDeletion(MarkForDeletionRequestV2) returns (MarkForDeletionResponseV2);

    // ListConfigs will list all stored configuration that the manager manages.
    rpc ListConfigs(ListConfigRequestV2) returns (ListConfigResponseV2);

    // GetConfig will retrieve the requested configuration by name.
    rpc GetConfig(GetConfigRequestV2) returns (GetConfigResponseV2);
}
