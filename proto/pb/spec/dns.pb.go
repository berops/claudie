// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.5
// source: spec/dns.proto

package spec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlternativeName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlternativeName) Reset() {
	*x = AlternativeName{}
	mi := &file_spec_dns_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlternativeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlternativeName) ProtoMessage() {}

func (x *AlternativeName) ProtoReflect() protoreflect.Message {
	mi := &file_spec_dns_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlternativeName.ProtoReflect.Descriptor instead.
func (*AlternativeName) Descriptor() ([]byte, []int) {
	return file_spec_dns_proto_rawDescGZIP(), []int{0}
}

func (x *AlternativeName) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AlternativeName) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// DNS holds general information about the DNS records.
type DNS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DNS zone for the DNS records.
	DnsZone string `protobuf:"bytes,1,opt,name=dnsZone,proto3" json:"dnsZone,omitempty"`
	// User specified hostname. (optional)
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Provider for the DNS records.
	Provider *Provider `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	// The whole hostname of the DNS record.
	Endpoint string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// alternative names for which A records will be created in addition to the hostname.
	AlternativeNames []*AlternativeName `protobuf:"bytes,5,rep,name=alternativeNames,proto3" json:"alternativeNames,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DNS) Reset() {
	*x = DNS{}
	mi := &file_spec_dns_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNS) ProtoMessage() {}

func (x *DNS) ProtoReflect() protoreflect.Message {
	mi := &file_spec_dns_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNS.ProtoReflect.Descriptor instead.
func (*DNS) Descriptor() ([]byte, []int) {
	return file_spec_dns_proto_rawDescGZIP(), []int{1}
}

func (x *DNS) GetDnsZone() string {
	if x != nil {
		return x.DnsZone
	}
	return ""
}

func (x *DNS) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DNS) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *DNS) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *DNS) GetAlternativeNames() []*AlternativeName {
	if x != nil {
		return x.AlternativeNames
	}
	return nil
}

var File_spec_dns_proto protoreflect.FileDescriptor

const file_spec_dns_proto_rawDesc = "" +
	"\n" +
	"\x0espec/dns.proto\x12\x04spec\x1a\x13spec/provider.proto\"I\n" +
	"\x0fAlternativeName\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\"\xc6\x01\n" +
	"\x03DNS\x12\x18\n" +
	"\adnsZone\x18\x01 \x01(\tR\adnsZone\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12*\n" +
	"\bprovider\x18\x03 \x01(\v2\x0e.spec.ProviderR\bprovider\x12\x1a\n" +
	"\bendpoint\x18\x04 \x01(\tR\bendpoint\x12A\n" +
	"\x10alternativeNames\x18\x05 \x03(\v2\x15.spec.AlternativeNameR\x10alternativeNamesB)Z'github.com/berops/claudie/proto/pb/specb\x06proto3"

var (
	file_spec_dns_proto_rawDescOnce sync.Once
	file_spec_dns_proto_rawDescData []byte
)

func file_spec_dns_proto_rawDescGZIP() []byte {
	file_spec_dns_proto_rawDescOnce.Do(func() {
		file_spec_dns_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spec_dns_proto_rawDesc), len(file_spec_dns_proto_rawDesc)))
	})
	return file_spec_dns_proto_rawDescData
}

var file_spec_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spec_dns_proto_goTypes = []any{
	(*AlternativeName)(nil), // 0: spec.AlternativeName
	(*DNS)(nil),             // 1: spec.DNS
	(*Provider)(nil),        // 2: spec.Provider
}
var file_spec_dns_proto_depIdxs = []int32{
	2, // 0: spec.DNS.provider:type_name -> spec.Provider
	0, // 1: spec.DNS.alternativeNames:type_name -> spec.AlternativeName
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spec_dns_proto_init() }
func file_spec_dns_proto_init() {
	if File_spec_dns_proto != nil {
		return
	}
	file_spec_provider_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spec_dns_proto_rawDesc), len(file_spec_dns_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spec_dns_proto_goTypes,
		DependencyIndexes: file_spec_dns_proto_depIdxs,
		MessageInfos:      file_spec_dns_proto_msgTypes,
	}.Build()
	File_spec_dns_proto = out.File
	file_spec_dns_proto_goTypes = nil
	file_spec_dns_proto_depIdxs = nil
}
