// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.5
// source: manager.proto

package pb

import (
	spec "github.com/berops/claudie/proto/pb/spec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertManifestRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	K8SCtx        *spec.KubernetesContext `protobuf:"bytes,2,opt,name=k8sCtx,proto3" json:"k8sCtx,omitempty"`
	Manifest      *spec.Manifest          `protobuf:"bytes,3,opt,name=manifest,proto3" json:"manifest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertManifestRequest) Reset() {
	*x = UpsertManifestRequest{}
	mi := &file_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertManifestRequest) ProtoMessage() {}

func (x *UpsertManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertManifestRequest.ProtoReflect.Descriptor instead.
func (*UpsertManifestRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertManifestRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertManifestRequest) GetK8SCtx() *spec.KubernetesContext {
	if x != nil {
		return x.K8SCtx
	}
	return nil
}

func (x *UpsertManifestRequest) GetManifest() *spec.Manifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type UpsertManifestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertManifestResponse) Reset() {
	*x = UpsertManifestResponse{}
	mi := &file_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertManifestResponse) ProtoMessage() {}

func (x *UpsertManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertManifestResponse.ProtoReflect.Descriptor instead.
func (*UpsertManifestResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertManifestResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertManifestResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type MarkForDeletionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkForDeletionRequest) Reset() {
	*x = MarkForDeletionRequest{}
	mi := &file_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkForDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkForDeletionRequest) ProtoMessage() {}

func (x *MarkForDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkForDeletionRequest.ProtoReflect.Descriptor instead.
func (*MarkForDeletionRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{2}
}

func (x *MarkForDeletionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarkForDeletionRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type MarkForDeletionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkForDeletionResponse) Reset() {
	*x = MarkForDeletionResponse{}
	mi := &file_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkForDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkForDeletionResponse) ProtoMessage() {}

func (x *MarkForDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkForDeletionResponse.ProtoReflect.Descriptor instead.
func (*MarkForDeletionResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{3}
}

func (x *MarkForDeletionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarkForDeletionResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type NextTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextTaskRequest) Reset() {
	*x = NextTaskRequest{}
	mi := &file_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTaskRequest) ProtoMessage() {}

func (x *NextTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTaskRequest.ProtoReflect.Descriptor instead.
func (*NextTaskRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{4}
}

type NextTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *spec.Workflow         `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Current       *spec.Clusters         `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Event         *spec.TaskEvent        `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Ttl           int32                  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Cluster       string                 `protobuf:"bytes,5,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Version       uint64                 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextTaskResponse) Reset() {
	*x = NextTaskResponse{}
	mi := &file_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTaskResponse) ProtoMessage() {}

func (x *NextTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTaskResponse.ProtoReflect.Descriptor instead.
func (*NextTaskResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{5}
}

func (x *NextTaskResponse) GetState() *spec.Workflow {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *NextTaskResponse) GetCurrent() *spec.Clusters {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *NextTaskResponse) GetEvent() *spec.TaskEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *NextTaskResponse) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *NextTaskResponse) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *NextTaskResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *NextTaskResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TaskUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cluster       string                 `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	TaskId        string                 `protobuf:"bytes,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Version       uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	State         *spec.Workflow         `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdateRequest) Reset() {
	*x = TaskUpdateRequest{}
	mi := &file_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdateRequest) ProtoMessage() {}

func (x *TaskUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdateRequest.ProtoReflect.Descriptor instead.
func (*TaskUpdateRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{6}
}

func (x *TaskUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskUpdateRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *TaskUpdateRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskUpdateRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TaskUpdateRequest) GetState() *spec.Workflow {
	if x != nil {
		return x.State
	}
	return nil
}

type TaskUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdateResponse) Reset() {
	*x = TaskUpdateResponse{}
	mi := &file_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdateResponse) ProtoMessage() {}

func (x *TaskUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdateResponse.ProtoReflect.Descriptor instead.
func (*TaskUpdateResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{7}
}

func (x *TaskUpdateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskUpdateResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ListConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigRequest) Reset() {
	*x = ListConfigRequest{}
	mi := &file_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigRequest) ProtoMessage() {}

func (x *ListConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigRequest.ProtoReflect.Descriptor instead.
func (*ListConfigRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{8}
}

type ListConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*spec.Config         `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigResponse) Reset() {
	*x = ListConfigResponse{}
	mi := &file_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigResponse) ProtoMessage() {}

func (x *ListConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigResponse.ProtoReflect.Descriptor instead.
func (*ListConfigResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{9}
}

func (x *ListConfigResponse) GetConfigs() []*spec.Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{10}
}

func (x *GetConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *spec.Config           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{11}
}

func (x *GetConfigResponse) GetConfig() *spec.Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateNodePoolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cluster       string                 `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Nodepool      *spec.NodePool         `protobuf:"bytes,4,opt,name=nodepool,proto3" json:"nodepool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodePoolRequest) Reset() {
	*x = UpdateNodePoolRequest{}
	mi := &file_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodePoolRequest) ProtoMessage() {}

func (x *UpdateNodePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodePoolRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodePoolRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNodePoolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodePoolRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *UpdateNodePoolRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateNodePoolRequest) GetNodepool() *spec.NodePool {
	if x != nil {
		return x.Nodepool
	}
	return nil
}

type UpdateNodePoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodePoolResponse) Reset() {
	*x = UpdateNodePoolResponse{}
	mi := &file_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodePoolResponse) ProtoMessage() {}

func (x *UpdateNodePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodePoolResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodePoolResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateNodePoolResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodePoolResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type TaskCompleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cluster       string                 `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	TaskId        string                 `protobuf:"bytes,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Version       uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Workflow      *spec.Workflow         `protobuf:"bytes,5,opt,name=workflow,proto3" json:"workflow,omitempty"`
	State         *spec.Clusters         `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCompleteRequest) Reset() {
	*x = TaskCompleteRequest{}
	mi := &file_manager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompleteRequest) ProtoMessage() {}

func (x *TaskCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompleteRequest.ProtoReflect.Descriptor instead.
func (*TaskCompleteRequest) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{14}
}

func (x *TaskCompleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskCompleteRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *TaskCompleteRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompleteRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TaskCompleteRequest) GetWorkflow() *spec.Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskCompleteRequest) GetState() *spec.Clusters {
	if x != nil {
		return x.State
	}
	return nil
}

type TaskCompleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCompleteResponse) Reset() {
	*x = TaskCompleteResponse{}
	mi := &file_manager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompleteResponse) ProtoMessage() {}

func (x *TaskCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompleteResponse.ProtoReflect.Descriptor instead.
func (*TaskCompleteResponse) Descriptor() ([]byte, []int) {
	return file_manager_proto_rawDescGZIP(), []int{15}
}

func (x *TaskCompleteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskCompleteResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_manager_proto protoreflect.FileDescriptor

const file_manager_proto_rawDesc = "" +
	"\n" +
	"\rmanager.proto\x12\aclaudie\x1a\x13spec/manifest.proto\x1a\x13spec/nodepool.proto\"\x88\x01\n" +
	"\x15UpsertManifestRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x06k8sCtx\x18\x02 \x01(\v2\x17.spec.KubernetesContextR\x06k8sCtx\x12*\n" +
	"\bmanifest\x18\x03 \x01(\v2\x0e.spec.ManifestR\bmanifest\"F\n" +
	"\x16UpsertManifestResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"F\n" +
	"\x16MarkForDeletionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"G\n" +
	"\x17MarkForDeletionResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"\x11\n" +
	"\x0fNextTaskRequest\"\xe3\x01\n" +
	"\x10NextTaskResponse\x12$\n" +
	"\x05state\x18\x01 \x01(\v2\x0e.spec.WorkflowR\x05state\x12(\n" +
	"\acurrent\x18\x02 \x01(\v2\x0e.spec.ClustersR\acurrent\x12%\n" +
	"\x05event\x18\x03 \x01(\v2\x0f.spec.TaskEventR\x05event\x12\x10\n" +
	"\x03ttl\x18\x04 \x01(\x05R\x03ttl\x12\x18\n" +
	"\acluster\x18\x05 \x01(\tR\acluster\x12\x18\n" +
	"\aversion\x18\x06 \x01(\x04R\aversion\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\"\x99\x01\n" +
	"\x11TaskUpdateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acluster\x18\x02 \x01(\tR\acluster\x12\x16\n" +
	"\x06taskId\x18\x03 \x01(\tR\x06taskId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x04R\aversion\x12$\n" +
	"\x05state\x18\x05 \x01(\v2\x0e.spec.WorkflowR\x05state\"B\n" +
	"\x12TaskUpdateResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"\x13\n" +
	"\x11ListConfigRequest\"<\n" +
	"\x12ListConfigResponse\x12&\n" +
	"\aconfigs\x18\x01 \x03(\v2\f.spec.ConfigR\aconfigs\"&\n" +
	"\x10GetConfigRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"9\n" +
	"\x11GetConfigResponse\x12$\n" +
	"\x06config\x18\x01 \x01(\v2\f.spec.ConfigR\x06config\"\x8b\x01\n" +
	"\x15UpdateNodePoolRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acluster\x18\x02 \x01(\tR\acluster\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\x12*\n" +
	"\bnodepool\x18\x04 \x01(\v2\x0e.spec.NodePoolR\bnodepool\"F\n" +
	"\x16UpdateNodePoolResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"\xc7\x01\n" +
	"\x13TaskCompleteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acluster\x18\x02 \x01(\tR\acluster\x12\x16\n" +
	"\x06taskId\x18\x03 \x01(\tR\x06taskId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x04R\aversion\x12*\n" +
	"\bworkflow\x18\x05 \x01(\v2\x0e.spec.WorkflowR\bworkflow\x12$\n" +
	"\x05state\x18\x06 \x01(\v2\x0e.spec.ClustersR\x05state\"D\n" +
	"\x14TaskCompleteResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion2\xed\x04\n" +
	"\x0eManagerService\x12Q\n" +
	"\x0eUpsertManifest\x12\x1e.claudie.UpsertManifestRequest\x1a\x1f.claudie.UpsertManifestResponse\x12T\n" +
	"\x0fMarkForDeletion\x12\x1f.claudie.MarkForDeletionRequest\x1a .claudie.MarkForDeletionResponse\x12F\n" +
	"\vListConfigs\x12\x1a.claudie.ListConfigRequest\x1a\x1b.claudie.ListConfigResponse\x12B\n" +
	"\tGetConfig\x12\x19.claudie.GetConfigRequest\x1a\x1a.claudie.GetConfigResponse\x12?\n" +
	"\bNextTask\x12\x18.claudie.NextTaskRequest\x1a\x19.claudie.NextTaskResponse\x12E\n" +
	"\n" +
	"TaskUpdate\x12\x1a.claudie.TaskUpdateRequest\x1a\x1b.claudie.TaskUpdateResponse\x12K\n" +
	"\fTaskComplete\x12\x1c.claudie.TaskCompleteRequest\x1a\x1d.claudie.TaskCompleteResponse\x12Q\n" +
	"\x0eUpdateNodePool\x12\x1e.claudie.UpdateNodePoolRequest\x1a\x1f.claudie.UpdateNodePoolResponseB\n" +
	"Z\bproto/pbb\x06proto3"

var (
	file_manager_proto_rawDescOnce sync.Once
	file_manager_proto_rawDescData []byte
)

func file_manager_proto_rawDescGZIP() []byte {
	file_manager_proto_rawDescOnce.Do(func() {
		file_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manager_proto_rawDesc), len(file_manager_proto_rawDesc)))
	})
	return file_manager_proto_rawDescData
}

var file_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_manager_proto_goTypes = []any{
	(*UpsertManifestRequest)(nil),   // 0: claudie.UpsertManifestRequest
	(*UpsertManifestResponse)(nil),  // 1: claudie.UpsertManifestResponse
	(*MarkForDeletionRequest)(nil),  // 2: claudie.MarkForDeletionRequest
	(*MarkForDeletionResponse)(nil), // 3: claudie.MarkForDeletionResponse
	(*NextTaskRequest)(nil),         // 4: claudie.NextTaskRequest
	(*NextTaskResponse)(nil),        // 5: claudie.NextTaskResponse
	(*TaskUpdateRequest)(nil),       // 6: claudie.TaskUpdateRequest
	(*TaskUpdateResponse)(nil),      // 7: claudie.TaskUpdateResponse
	(*ListConfigRequest)(nil),       // 8: claudie.ListConfigRequest
	(*ListConfigResponse)(nil),      // 9: claudie.ListConfigResponse
	(*GetConfigRequest)(nil),        // 10: claudie.GetConfigRequest
	(*GetConfigResponse)(nil),       // 11: claudie.GetConfigResponse
	(*UpdateNodePoolRequest)(nil),   // 12: claudie.UpdateNodePoolRequest
	(*UpdateNodePoolResponse)(nil),  // 13: claudie.UpdateNodePoolResponse
	(*TaskCompleteRequest)(nil),     // 14: claudie.TaskCompleteRequest
	(*TaskCompleteResponse)(nil),    // 15: claudie.TaskCompleteResponse
	(*spec.KubernetesContext)(nil),  // 16: spec.KubernetesContext
	(*spec.Manifest)(nil),           // 17: spec.Manifest
	(*spec.Workflow)(nil),           // 18: spec.Workflow
	(*spec.Clusters)(nil),           // 19: spec.Clusters
	(*spec.TaskEvent)(nil),          // 20: spec.TaskEvent
	(*spec.Config)(nil),             // 21: spec.Config
	(*spec.NodePool)(nil),           // 22: spec.NodePool
}
var file_manager_proto_depIdxs = []int32{
	16, // 0: claudie.UpsertManifestRequest.k8sCtx:type_name -> spec.KubernetesContext
	17, // 1: claudie.UpsertManifestRequest.manifest:type_name -> spec.Manifest
	18, // 2: claudie.NextTaskResponse.state:type_name -> spec.Workflow
	19, // 3: claudie.NextTaskResponse.current:type_name -> spec.Clusters
	20, // 4: claudie.NextTaskResponse.event:type_name -> spec.TaskEvent
	18, // 5: claudie.TaskUpdateRequest.state:type_name -> spec.Workflow
	21, // 6: claudie.ListConfigResponse.configs:type_name -> spec.Config
	21, // 7: claudie.GetConfigResponse.config:type_name -> spec.Config
	22, // 8: claudie.UpdateNodePoolRequest.nodepool:type_name -> spec.NodePool
	18, // 9: claudie.TaskCompleteRequest.workflow:type_name -> spec.Workflow
	19, // 10: claudie.TaskCompleteRequest.state:type_name -> spec.Clusters
	0,  // 11: claudie.ManagerService.UpsertManifest:input_type -> claudie.UpsertManifestRequest
	2,  // 12: claudie.ManagerService.MarkForDeletion:input_type -> claudie.MarkForDeletionRequest
	8,  // 13: claudie.ManagerService.ListConfigs:input_type -> claudie.ListConfigRequest
	10, // 14: claudie.ManagerService.GetConfig:input_type -> claudie.GetConfigRequest
	4,  // 15: claudie.ManagerService.NextTask:input_type -> claudie.NextTaskRequest
	6,  // 16: claudie.ManagerService.TaskUpdate:input_type -> claudie.TaskUpdateRequest
	14, // 17: claudie.ManagerService.TaskComplete:input_type -> claudie.TaskCompleteRequest
	12, // 18: claudie.ManagerService.UpdateNodePool:input_type -> claudie.UpdateNodePoolRequest
	1,  // 19: claudie.ManagerService.UpsertManifest:output_type -> claudie.UpsertManifestResponse
	3,  // 20: claudie.ManagerService.MarkForDeletion:output_type -> claudie.MarkForDeletionResponse
	9,  // 21: claudie.ManagerService.ListConfigs:output_type -> claudie.ListConfigResponse
	11, // 22: claudie.ManagerService.GetConfig:output_type -> claudie.GetConfigResponse
	5,  // 23: claudie.ManagerService.NextTask:output_type -> claudie.NextTaskResponse
	7,  // 24: claudie.ManagerService.TaskUpdate:output_type -> claudie.TaskUpdateResponse
	15, // 25: claudie.ManagerService.TaskComplete:output_type -> claudie.TaskCompleteResponse
	13, // 26: claudie.ManagerService.UpdateNodePool:output_type -> claudie.UpdateNodePoolResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_manager_proto_init() }
func file_manager_proto_init() {
	if File_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manager_proto_rawDesc), len(file_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_proto_goTypes,
		DependencyIndexes: file_manager_proto_depIdxs,
		MessageInfos:      file_manager_proto_msgTypes,
	}.Build()
	File_manager_proto = out.File
	file_manager_proto_goTypes = nil
	file_manager_proto_depIdxs = nil
}
